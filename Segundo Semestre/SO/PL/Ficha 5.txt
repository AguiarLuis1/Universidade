1
#include <stdio.h>
#include <fcntl.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>
#include <signal.h>
#include <ctype.h>
#include <string.h>

int main(int argc,char **argv)
{
	char buff[20];
	int pipe1[2],pipe2[2];
	pipe(pipe1);
	pipe(pipe2);
	char *string="Teste tEste";
	size_t len=strlen(string);
	
	pid_t pid=fork();
	if (pid==0)
	{
		printf("Filho\n");
		close(pipe1[1]);
		read(pipe1[0],buff, len);
		close(pipe1[0]);
		close(pipe2[0]);
		int i;
		for (i = 0; i <len; i++)
		{
			buff[i]=toupper(buff[i]);
		}
		write(pipe2[1],buff,len);
		close(pipe2[1]);
		
	}else
	{
		printf("Pai\n");
		close(pipe1[0]);
		write(pipe1[1], string, len);
		close(pipe1[1]);
		wait(NULL);
		close(pipe2[1]);
		read(pipe2[0],buff,len);
		close(pipe2[0]);
		printf("%s\n",buff);	
	}
	
	return 0;
}

3
int main(int argc,char **argv)
{
	int fp=open("txt.txt", O_RDONLY);
	char buff;
	
	int pipefd[2];
	pipe(pipefd);
	
	pid_t cpid1=fork();
	pid_t cpid2=fork();
	
	if(cpid1==0){
		close(pipefd[0]);
		while(read(fp,&buff,1)>0)
			write(pipefd[1],&buff,1);
		close(pipefd[1]);
		exit(0);
	}
	else if(cpid2==0){
		close(pipefd[0]);
		while(read(fp,&buff,1)>0)
			write(pipefd[1],&buff,1);
		close(pipefd[1]);
		exit(0);	
	}
	wait(NULL);
	close(pipefd[1]);
	while(read(pipefd[0],&buff,1)>0)
			write(1,&buff,1);
	wait(NULL);
	while(read(pipefd[0],&buff,1)>0)
			write(1,&buff,1);
	exit(0);
}